// Define which custom label nr [0-4] will be used.
// IMPORTANT: Ensure this label is free and only used for this solution.
// This number should match the custom_label nr in the second column of the spreadsheet above.
var CUSTOM_LABEL_NR = '4';
// Create a new Google spreadsheet.
// Add these values to A1 and B1 respectively:
// A1 = 'id', B1 = 'custom_label4' - the nr of the custom label should match the above.
// Name this working sheet 'LowVolume'.
// Copy the link of the new sheet and paste it below.
var SPREADSHEET_URL = 'https://docs.google.com/spreadsheets/d/1dQa2TyWgXDFNBFo00abXCVdQdbsvisfL229kZykkEek/edit?usp=sharing';
// Set the value for the label for newly flagged low volume products.
var LABEL_LOW = 'low_clicks_last_30d';
// Set the value for the label for low volume products that have ramped up.
var LABEL_RAMPED_UP = 'product_ramped_up';
// Set the nr. of clicks with which should be considered ramped_up.
// It needs to be a string to be added as part of the query statement.
var THRESHOLD = '30';
// The following filter will detect low volume products, using the threshold above.
// You can add other metrics to filter on, for ex. adding AND metrics.impressions < 100.
// Optionally you can filter on a merchant, e.g. adding AND MerchantId = 1234.
var FILTER_ALL = 'metrics.clicks < ' + THRESHOLD + ' AND metrics.impressions < 300 AND metrics.conversions = 0' ;
// The following filter will identify products that have already ramped up.
// As a condition, it must have the previously added label and for ex. clicks >50.
// To add further conditions use the AND clause, e.g. AND Conversions > 10.
var FILTER_RAMPED_UP = 'segments.product_custom_attribute' + CUSTOM_LABEL_NR + ' = "' + LABEL_LOW + '" ';
// To filter campaign names, add for ex. AND campaign.name LIKE “%FR_FR%”.
// Set the filter to true to include it.
var USE_CAMPAIGN_FILTER = true;
var FILTER_CAMPAIGN_NAME = ' AND campaign.name LIKE "PLA Smart" ';
// Enter time duration below. Possibilities:
// TODAY | YESTERDAY | LAST_7_DAYS | LAST_WEEK | LAST_BUSINESS_WEEK |
// THIS_MONTH | LAST_MONTH | LAST_14_DAYS | LAST_30_DAYS |
// THIS_WEEK_SUN_TODAY | THIS_WEEK_MON_TODAY | LAST_WEEK_SUN_SAT Currently
// default time duration is set to: LAST_30_DAYS
var TIME_DURATION = 'LAST_30_DAYS';
// This variable helps control data overflow in the target sheet.
// Increasing this value may cause timeouts and sheet errors.
// For ex. 10K products may take ~30 secs to run, 100K ~ 5 mins, while 500K could take 20+mins.
var COUNT_LIMIT = '100000';

//
// Nazwy zakładek muszą być takie jak w pliku:
// https://docs.google.com/spreadsheets/d/1VdzaWRbDF6YtJd-LSnPvObPzoiJsRE_4Hhwx6oJnpy8/edit?usp=sharing
// Podstawowe nazwy arkuszy to: Data, ALL, Produkty RAMPED_UP
//

function main() {
  // Raportowanie: Filtr + nazwa pliku
  //getReport('metrics.clicks < 40', 'Report ALL');
  //getReport('segments.product_custom_attribute' + CUSTOM_LABEL_NR + ' = "' + LABEL_RAMPED_UP + '" ', 'Report RAMPED_UP');
  //getReport('segments.product_custom_attribute' + CUSTOM_LABEL_NR + ' = "' + LABEL_LOW + '" ', 'Report LOW');

  
  Logger.log('Wszystkich oznaczonych produktów LABEL_LOW z warunku FILTER_ALL');
	var productsAll       = getFilteredShoppingProducts(FILTER_ALL, 'ALL');
  Logger.log('Wszystkich oznaczonych produktów LABEL_RAMPED_UP z warunku FILTER_RAMPED_UP');
	var productsRampedUp  = getFilteredShoppingProducts(FILTER_RAMPED_UP, 'Produkty RAMPED_UP');
	var products = productsAll.concat(productsRampedUp);
	pushToSpreadsheet(products);
}

function getFilteredShoppingProducts(filters, ReportName) {
	var campaignField = ''
	if (USE_CAMPAIGN_FILTER) {
		campaignField = 'campaign.name, ';
		filters = filters + FILTER_CAMPAIGN_NAME
	}
	var query = 'SELECT segments.product_item_id, ' +
		campaignField +
		'segments.product_custom_attribute' + CUSTOM_LABEL_NR + ', ' +
		'metrics.clicks, metrics.impressions, metrics.conversions ' +
		'FROM shopping_performance_view WHERE ' + filters +
		' AND segments.product_item_id != "undefined"' +
		' AND segments.date DURING ' + TIME_DURATION +
		' ORDER BY metrics.clicks DESC LIMIT ' + COUNT_LIMIT;
	var products = [];
	var count = 0;
  var count_new = 0;

  // Podgląd query w razie problemów z filtrami
  //Logger.log(query);
  
	var report = AdsApp.report(query);
  
  // Raportowanie
  report.exportToSheet(SpreadsheetApp.openByUrl(SPREADSHEET_URL).getSheetByName(ReportName));

  
	var rows = report.rows();
	while (rows.hasNext()) {
		var row = rows.next();
		var clicks = row['metrics.clicks'];
    var impressions = row['metrics.impressions'];
		var conversions = row['metrics.conversions'];
		var productId = row['segments.product_item_id']
    var label = row['segments.product_custom_attribute4']

		// Label product as LABEL_LOW
		if (label != LABEL_LOW && clicks < THRESHOLD) {
			products.push([productId.toUpperCase(), LABEL_LOW]);
			count += 1;
		} 
    // Label product as ramped up
    if (label == LABEL_LOW && ( clicks > THRESHOLD || conversions > 0 ) ) {
    //if ( clicks > THRESHOLD ) {
			products.push([productId.toUpperCase(), LABEL_RAMPED_UP]);
			count += 1;
		}
	}
	Logger.log(count);
	return products;
}

// Funkcja do raportowania
function getReport(filters, ReportName) {
	var campaignField = ''
	if (USE_CAMPAIGN_FILTER) {
		campaignField = 'campaign.name, ';
		filters = filters + FILTER_CAMPAIGN_NAME
	}
	var query = 'SELECT segments.product_item_id, ' +
		campaignField +
		'segments.product_custom_attribute' + CUSTOM_LABEL_NR + ', ' +
		'metrics.clicks, metrics.impressions, metrics.conversions ' +
		'FROM shopping_performance_view WHERE ' + filters +
		' AND segments.product_item_id != "undefined"' +
		' AND segments.date DURING ' + TIME_DURATION +
		' ORDER BY metrics.clicks DESC LIMIT ' + COUNT_LIMIT;
	var products = [];
	var count = 0;
  var count_new = 0;

  // Podgląd query w razie problemów z filtrami
  //Logger.log(query);
	var report = AdsApp.report(query);
  report.exportToSheet(SpreadsheetApp.openByUrl(SPREADSHEET_URL).getSheetByName(ReportName));
}

// Funkcja eksportująca nowe dane
function pushToSpreadsheet(data) {
	var spreadsheet = SpreadsheetApp.openByUrl(SPREADSHEET_URL);
	var sheet = spreadsheet.getSheetByName('Data');
	var lastRow = sheet.getMaxRows();
	sheet.getRange('A2:B' + lastRow).clearContent();
	var start_row = 2;
	var endRow = start_row + data.length - 1;
	var range = sheet.getRange(
		'A' + start_row + ':' +
		'B' + endRow);
	if (data.length > 0) {
		range.setValues(data);
	}
	return;
}
